# CS224
# Lab 1 
# Section 4 
# Anõl KILI‚ 
# 22203783
# 23.02.2024

.data
	
	newLine: .asciiz "\n"
	prompt1: .asciiz "Provide variable a : "
	prompt2: .asciiz "Provide variable b : "
	prompt3: .asciiz "Division by zero error ! "
	prompt4: .asciiz "Answer is : "


.text

	main:
		
		jal userInput
		
		jal calculate
		
		addi $a0, $v0, 0 # quotient
		jal result
		
		li $v0, 10
		syscall
	
	userInput:
		
		li $v0, 4
		la $a0, prompt1
		syscall 
		
		li $v0, 5 
		syscall
		
		sw $v0, 0($sp)
		addi $sp, $sp, -4
		
		li $v0, 4
		la $a0, newLine
		syscall 

		li $v0, 4
		la $a0, prompt2
		syscall 
		
		li $v0, 5 
		syscall
		
		sw $v0, 0($sp)
		addi $sp, $sp, 4

		li $v0, 4
		la $a0, newLine
		syscall 
		
		jr $ra
		


	calculate:
	
		lw $t0, 0($sp) # a
		addi $sp, $sp, -4

		lw $t1, 0($sp) # b
		addi $sp, $sp, 4
		
		mult $t0, $t0
		
		mflo $t3 # a * a
		
		sub $t3, $t3, $t1  # a * a - b
		
		beq $t1, $zero, divByZero

		div $t3, $t1 # (a * a - b) / b
		
		mflo $t3 # quotient 
		
		div $t3, $t0
		
		mfhi $v0 # quotient 
		
		jr $ra

		
		
		
	result:
		
		addi $t0, $a0, 0 
		
		li $v0, 4
		la $a0, prompt4
		syscall
		
		li $v0, 1
		addi $a0, $t0, 0
		syscall
		
		li $v0, 4
		la $a0, newLine
		syscall 
		
		jr $ra


	divByZero:
		
		li $v0, 4
		la $a0, prompt3
		syscall 
		
		li $v0, 4
		la $a0, newLine
		syscall 



##
## Program1.asm - prints out "hello world"
##
##	a0 - points to the string
##

#################################
#					 	#
#		text segment		#
#						#
#################################

	.text		
	.globl __start 

__start:		# execution starts here
	la $a0,str	# put string address into a0
	li $v0,4	# system call to print
	syscall		#   out a string

	li $v0,10  # system call to exit
	syscall	#    bye bye


#################################
#					 	#
#     	 data segment		#
#						#
#################################

	.data
str:	.asciiz "0123hello world\n"
n:	.word	10

##
## end of file Program1.asm


##
## Program2.asm asks user for temperature in Celsius,
##  converts to Fahrenheit, prints the result.
##
##	v0 - reads in Celsius
##	t0 - holds Fahrenheit result
##	a0 - points to output strings
##

#################################
#					 	#
#		text segment		#
#						#
#################################

	.text		
	.globl __start	

__start:
	la $a0,prompt	# output prompt message on terminal
	li $v0,4	# syscall 4 prints the string
	syscall

	li $v0, 5	# syscall 5 reads an integer
	syscall

	mul $t0,$v0,9	# to convert,multiply by 9,
	div $t0,$t0,5	# divide by 5, then
	add $t0,$t0,32	# add 32

	la $a0,ans1	# print string before result
	li $v0,4
	syscall

	move $a0,$t0	# print integer result
	li $v0,1		# using syscall 1
	syscall

	la $a0,endl	# system call to print
	li $v0,4		# out a newline
	syscall

	li $v0,10		# system call to exit
	syscall		#    bye bye


#################################
#					 	#
#     	 data segment		#
#						#
#################################

	.data
prompt:	.asciiz "Enter temperature (Celsius): "
ans1:	.asciiz "The temperature in Fahrenheit is "
endl:	.asciiz "\n"

##
## end of file Program2.asm




##
##	Program3.asm is a loop implementation
##	of the Fibonacci function
##        

#################################
#					 	#
#		text segment		#
#						#
#################################

	.text		
.globl __start
 
__start:		# execution starts here
	li $a0,7	# to calculate fib(7)
	jal fib		# call fib
	move $a0,$v0	# print result
	li $v0, 1
	syscall

	la $a0,endl	# print newline
	li $v0,4
	syscall

	li $v0,10
	syscall		# bye bye

#------------------------------------------------


fib:	move $v0,$a0	# initialise last element
	blt $a0,2,done	# fib(0)=0, fib(1)=1

	li $t0,0	# second last element
	li $v0,1	# last element

loop:	add $t1,$t0,$v0	# get next value
	move $t0,$v0	# update second last
	move $v0,$t1	# update last element
	sub $a0,$a0,1	# decrement count
	bgt $a0,0,loop	# exit loop when count=0
done:	jr $ra

#################################
#					 	#
#     	 data segment		#
#						#
#################################

	.data
endl:	.asciiz "\n"

##
## end of Program3.asm


